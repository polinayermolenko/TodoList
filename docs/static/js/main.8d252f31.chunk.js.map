{"version":3,"sources":["components/AppHeader/AppHeader.js","components/SearchPannel/SearchPannel.js","components/TodoListItem/TodoListItem.js","components/TodoList/TodoList.js","components/ItemStatusFilter/ItemStatusFilter.js","components/AddItem/AddItem.js","components/App/App.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPannel","state","search","onSearchChange","evt","setState","target","value","props","onItemSearch","type","placeholder","onChange","this","Component","TodoListItem","label","onDeleted","onToggleDone","onToggleImportant","classNames","important","onClick","TodoList","todos","elements","map","item","id","itemProps","key","ItemStatusFilter","buttons","name","filter","onFilterChange","clazz","AddItem","onLabelChange","onSubmit","preventDefault","onItemAdded","App","maxId","todoData","createTodoItem","deleteItem","index","findIndex","el","slice","addItem","text","newItem","searchItems","items","length","toLowerCase","includes","filterItems","toggleItem","arr","propName","oldItem","visibleItems","countDone","todoCount","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8d252f31.chunk.js","sourcesContent":["import React from 'react';\r\nimport './AppHeader.css';\r\n\r\nconst AppHeader = ({ toDo, done }) => {\r\n    return (\r\n        <div className='app-header d-flex'>\r\n            <h1>Todo List</h1>\r\n            <h2>{toDo} more to do, {done} done</h2>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default AppHeader;","import React, { Component } from 'react';\r\nimport './SearchPannel.css'\r\n\r\nexport default class SearchPannel extends Component {\r\n    state = {\r\n        search: ''\r\n    };\r\n\r\n    onSearchChange = (evt) => {\r\n        this.setState({\r\n            search: evt.target.value\r\n        });\r\n\r\n        this.props.onItemSearch(evt.target.value)\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <input type='text'\r\n                className='form-control search-input'\r\n                placeholder='type to search'\r\n                onChange={this.onSearchChange}\r\n                value={this.state.search} />\r\n        );\r\n    };\r\n};\r\n","import React, { Component } from 'react';\r\nimport './TodoListItem.css';\r\n\r\nexport default class TodoListItem extends Component {\r\n\r\n  render() {\r\n    const { label, onDeleted, onToggleDone, onToggleImportant, done, important } = this.props;\r\n\r\n    let classNames = 'todo-list-item';\r\n    if (done) {\r\n      classNames += ' done';\r\n    }\r\n\r\n    if (important) {\r\n      classNames += ' important';\r\n    }\r\n\r\n    return (\r\n      <span className={classNames}>\r\n        <span\r\n          className=\"todo-list-item-label\"\r\n          onClick={onToggleDone}>\r\n          {label}\r\n        </span>\r\n\r\n        <button type=\"button\"\r\n          className=\"btn btn-outline-success btn-sm float-right\"\r\n          onClick={onToggleImportant}>\r\n          <span className=\"fa fa-exclamation\" ></span>\r\n        </button>\r\n\r\n        <button type=\"button\"\r\n          className=\"btn btn-outline-danger btn-sm float-right\"\r\n          onClick={onDeleted}>\r\n          <span className=\"fa fa-trash-o\"></span>\r\n        </button>\r\n      </span>\r\n    );\r\n  };\r\n};\r\n\r\n","import React from 'react';\r\nimport TodoListItem from '../TodoListItem/TodoListItem';\r\nimport './TodoList.css';\r\n\r\nconst TodoList = ({ todos, onDeleted, onToggleDone, onToggleImportant }) => {\r\n  const elements = todos.map((item) => {\r\n    const { id, ...itemProps } = item;\r\n\r\n    return (\r\n      <li key={id} className='list-group-item'>\r\n        <TodoListItem {...itemProps}\r\n          onDeleted={() => onDeleted(id)}\r\n          onToggleDone={() => onToggleDone(id)}\r\n          onToggleImportant={() => onToggleImportant(id)} />\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <ul className='list-group todo-list'>\r\n      {elements}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React, { Component } from 'react';\r\nimport './ItemStatusFilter.css';\r\n\r\nexport default class ItemStatusFilter extends Component {\r\n  buttons = [\r\n    { name: 'all', label: 'All' },\r\n    { name: 'active', label: 'Active' },\r\n    { name: 'done', label: 'Done' }\r\n  ];\r\n\r\n  render() {\r\n    const { filter, onFilterChange } = this.props;\r\n\r\n    const buttons = this.buttons.map(({ name, label }) => {\r\n      const isActive = filter === name;\r\n      const clazz = isActive ? 'btn-inf' : 'btn-outline-secondary';\r\n\r\n      return (\r\n        <button type=\"button\"\r\n          className={`btn ${clazz}`}\r\n          key={name}\r\n          onClick={() => onFilterChange(name)}>\r\n          {label}\r\n        </button>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"btn-group\">\r\n        {buttons}\r\n      </div>\r\n    );\r\n  };\r\n};\r\n","import React, { Component } from 'react';\r\nimport './AddItem.css';\r\n\r\nexport default class AddItem extends Component {\r\n  state = {\r\n    label: ''\r\n  };\r\n\r\n  onLabelChange = (evt) => {\r\n    this.setState({\r\n      label: evt.target.value\r\n    });\r\n  };\r\n\r\n  onSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    this.props.onItemAdded(this.state.label);\r\n    this.setState({\r\n      label: ''\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className='add-item d-flex' onSubmit={this.onSubmit}>\r\n        <input type='text' className='form-control'\r\n          onChange={this.onLabelChange}\r\n          placeholder='What needs to be done?'\r\n          value={this.state.label} />\r\n        <button className='btn btn-outline-secondary'>\r\n          Add Item\r\n        </button>\r\n      </form>\r\n    );\r\n  };\r\n};\r\n","import React, { Component } from 'react';\r\n\r\nimport AppHeader from '../AppHeader/AppHeader';\r\nimport SearchPannel from '../SearchPannel/SearchPannel';\r\nimport TodoList from '../TodoList/TodoList';\r\nimport ItemStatusFilter from '../ItemStatusFilter/ItemStatusFilter';\r\nimport AddItem from '../AddItem/AddItem';\r\n\r\nimport './App.css';\r\n\r\nexport default class App extends Component {\r\n  maxId = 100;\r\n\r\n  state = {\r\n    todoData: [\r\n      this.createTodoItem('Drink Tea'),\r\n      this.createTodoItem('Build Awesome App'),\r\n      this.createTodoItem('Have a lunch')\r\n    ],\r\n    search: '',\r\n    filter: 'active'\r\n  };\r\n\r\n  createTodoItem(label) {\r\n    return {\r\n      id: this.maxId++,\r\n      label,\r\n      important: false,\r\n      done: false\r\n    }\r\n  };\r\n\r\n  deleteItem = (id) => {\r\n    this.setState(({ todoData }) => {\r\n      const index = todoData.findIndex((el) => el.id === id);\r\n      const newTodoData = [\r\n        ...todoData.slice(0, index),\r\n        ...todoData.slice(index + 1)\r\n      ];\r\n\r\n      return {\r\n        todoData: newTodoData\r\n      };\r\n    });\r\n  };\r\n\r\n  addItem = (text) => {\r\n    const newItem = this.createTodoItem(text);\r\n\r\n    this.setState(({ todoData }) => {\r\n      const newData = [...todoData, newItem];\r\n\r\n      return {\r\n        todoData: newData\r\n      };\r\n    });\r\n  };\r\n\r\n  searchItems = (items, text) => {\r\n    if (text.length === 0) {\r\n      return items;\r\n    }\r\n    return items.filter((item) => {\r\n      return item.label.toLowerCase().includes(text.toLowerCase());\r\n    });\r\n  };\r\n\r\n  onItemSearch = (search) => {\r\n    this.setState({ search })\r\n  };\r\n\r\n  filterItems = (items, filter) => {\r\n    switch (filter) {\r\n      case 'all':\r\n        return items;\r\n      case 'active':\r\n        return items.filter((item) => !item.done);\r\n      case 'done':\r\n        return items.filter((item) => item.done);\r\n      default:\r\n        return items;\r\n    }\r\n  };\r\n\r\n  onFilterChange = (filter) => {\r\n    this.setState({ filter })\r\n  };\r\n\r\n  toggleItem = (arr, id, propName) => {\r\n    const index = arr.findIndex((el) => el.id === id);\r\n    const oldItem = arr[index];\r\n    const newItem = { ...oldItem, [propName]: !oldItem[propName] };\r\n\r\n    return [\r\n      ...arr.slice(0, index),\r\n      newItem,\r\n      ...arr.slice(index + 1)\r\n    ];\r\n  };\r\n\r\n  onToggleDone = (id) => {\r\n    this.setState(({ todoData }) => {\r\n      return {\r\n        todoData: this.toggleItem(todoData, id, 'done')\r\n      }\r\n    })\r\n  };\r\n\r\n  onToggleImportant = (id) => {\r\n    this.setState(({ todoData }) => {\r\n      return {\r\n        todoData: this.toggleItem(todoData, id, 'important')\r\n      }\r\n\r\n    })\r\n  };\r\n\r\n  render() {\r\n    const { todoData, search, filter } = this.state;\r\n    const visibleItems = this.filterItems(this.searchItems(todoData, search), filter);\r\n    const countDone = todoData.filter((el) => el.done).length;\r\n    const todoCount = todoData.length - countDone;\r\n\r\n    return (\r\n      <div className='todo-app'>\r\n        <AppHeader toDo={todoCount} done={countDone} />\r\n        \r\n        <div className='top-panel d-flex'>\r\n          <SearchPannel onItemSearch={this.onItemSearch} />\r\n         \r\n          <ItemStatusFilter filter={filter}\r\n            onFilterChange={this.onFilterChange} />\r\n        </div>\r\n\r\n        <TodoList todos={visibleItems}\r\n          onDeleted={this.deleteItem}\r\n          onToggleDone={this.onToggleDone}\r\n          onToggleImportant={this.onToggleImportant} />\r\n        \r\n        <AddItem onItemAdded={this.addItem} />\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App/App';\n \nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}